// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Printf from "bs-platform/lib/es6/printf.js";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as MaterialUi_Popover from "@jsiebern/bs-material-ui/src/MaterialUi_Popover.bs.js";
import * as Util$ReactTemplate from "./Util.bs.js";
import * as Emoji$ReactTemplate from "./Emoji.bs.js";
import * as IntlChar$ReactTemplate from "./IntlChar.bs.js";
import * as ControlPanel$ReactTemplate from "./ControlPanel.bs.js";
import * as CoolCharData$ReactTemplate from "./CoolCharData.bs.js";

function str(prim) {
  return prim;
}

var component = ReasonReact.reducerComponent("CoolCharGenerator");

function make() {
  var getMode = function (mode) {
    var match = mode === /* Any */3257036;
    if (match) {
      return Util$ReactTemplate.chooseFromArray(CoolCharData$ReactTemplate.coolWritingSystems);
    } else {
      return mode;
    }
  };
  var getCoolChar = function (mode) {
    var writingSys = getMode(mode);
    var exit = 0;
    if (writingSys >= 83233512) {
      if (writingSys >= 836565865) {
        if (writingSys !== 894130468 && writingSys >= 836565866) {
          return /* record */[
                  /* text */"?",
                  /* caption */"?"
                ];
        } else {
          exit = 1;
        }
      } else if (writingSys !== 90688528 && writingSys >= 83233513) {
        return /* record */[
                /* text */"?",
                /* caption */"?"
              ];
      } else {
        exit = 1;
      }
    } else if (writingSys !== -790390071 && writingSys !== -325826967) {
      if (writingSys !== 50782054) {
        return /* record */[
                /* text */"?",
                /* caption */"?"
              ];
      } else {
        var e = Emoji$ReactTemplate.getEmoji(/* () */0);
        return /* record */[
                /* text */e[/* text */1],
                /* caption */Curry._2(Printf.sprintf(/* Format */[
                          /* String */Block.__(2, [
                              /* No_padding */0,
                              /* String_literal */Block.__(11, [
                                  " (",
                                  /* String */Block.__(2, [
                                      /* No_padding */0,
                                      /* Char_literal */Block.__(12, [
                                          /* ")" */41,
                                          /* End_of_format */0
                                        ])
                                    ])
                                ])
                            ]),
                          "%s (%s)"
                        ]), $$String.capitalize(e[/* shortname */0]), $$String.capitalize(e[/* category */2]))
              ];
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      var ic = IntlChar$ReactTemplate.getIntlChar(writingSys);
      return /* record */[
              /* text */ic[/* text */0],
              /* caption */Curry._2(Printf.sprintf(/* Format */[
                        /* String */Block.__(2, [
                            /* No_padding */0,
                            /* Char_literal */Block.__(12, [
                                /* " " */32,
                                /* String */Block.__(2, [
                                    /* No_padding */0,
                                    /* End_of_format */0
                                  ])
                              ])
                          ]),
                        "%s %s"
                      ]), ic[/* writingSystem */1], Util$ReactTemplate.numToHex(ic[/* ordinal */2]))
            ];
    }
    
  };
  var convertAnchorEl = function (maybeEl) {
    return Belt_Option.map(maybeEl, (function (el) {
                  return /* `ObjectGeneric */[
                          -317959944,
                          el
                        ];
                }));
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* AddChar */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var send = self[/* send */3];
              var state = self[/* state */1];
              return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, MaterialUi_Popover.make(/* None */0, convertAnchorEl(state[/* anchorEl */2]), /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* ClosePopup */2);
                                    })], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, Belt_Option.isSome(state[/* anchorEl */2]), /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[React.createElement("div", {
                                        className: "popover-content"
                                      }, React.createElement("div", {
                                            className: "text"
                                          }, state[/* popupChar */3][/* text */0]), React.createElement("div", {
                                            className: "caption"
                                          }, state[/* popupChar */3][/* caption */1]))])), ReasonReact.element(/* None */0, /* None */0, ControlPanel$ReactTemplate.make(CoolCharData$ReactTemplate.modeToJs(state[/* mode */1]), send, /* array */[])), React.createElement("div", {
                              className: "chars"
                            }, Belt_Array.mapWithIndex(state[/* chars */0], (function (i, cc) {
                                    return React.createElement("span", {
                                                key: String(i),
                                                title: cc[/* caption */1],
                                                onClick: (function (evt) {
                                                    var evt$1 = evt;
                                                    var cc$1 = cc;
                                                    var self$1 = self;
                                                    var el = evt$1.target;
                                                    return Curry._1(self$1[/* send */3], /* OpenPopup */Block.__(1, [/* tuple */[
                                                                    el,
                                                                    cc$1
                                                                  ]]));
                                                  })
                                              }, cc[/* text */0]);
                                  }))));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* chars : array */[],
                      /* mode : Any */3257036,
                      /* anchorEl : None */0,
                      /* popupChar : record */[
                        /* text */"?",
                        /* caption */"?"
                      ]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* chars */Belt_Array.concat(state[/* chars */0], /* array */[getCoolChar(state[/* mode */1])]),
                                  /* mode */state[/* mode */1],
                                  /* anchorEl */state[/* anchorEl */2],
                                  /* popupChar */state[/* popupChar */3]
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* chars : array */[],
                                  /* mode */state[/* mode */1],
                                  /* anchorEl */state[/* anchorEl */2],
                                  /* popupChar */state[/* popupChar */3]
                                ]]);
                  case 2 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* chars */state[/* chars */0],
                                  /* mode */state[/* mode */1],
                                  /* anchorEl : None */0,
                                  /* popupChar */state[/* popupChar */3]
                                ]]);
                  
                }
              } else if (action.tag) {
                var match = action[0];
                return /* Update */Block.__(0, [/* record */[
                            /* chars */state[/* chars */0],
                            /* mode */state[/* mode */1],
                            /* anchorEl : Some */[match[0]],
                            /* popupChar */match[1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* chars */state[/* chars */0],
                            /* mode */action[0],
                            /* anchorEl */state[/* anchorEl */2],
                            /* popupChar */state[/* popupChar */3]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  str ,
  component ,
  make ,
  
}
/* component Not a pure module */
